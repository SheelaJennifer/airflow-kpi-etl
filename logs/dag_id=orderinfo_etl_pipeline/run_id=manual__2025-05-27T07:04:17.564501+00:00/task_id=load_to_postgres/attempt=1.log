{"timestamp":"2025-05-27T07:04:53.874570","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-27T07:04:53.878148","level":"info","event":"Filling up the DagBag from /home/sheela/airflow/dags/orderinfo_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-27T07:04:56.619934Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:56.628229Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:56.629656Z","level":"info","event":"Current task name:load_to_postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:56.630118Z","level":"info","event":"Dag name:orderinfo_etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.898645Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.899287Z","level":"info","event":"--- Generated DDL ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.899852Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.900241Z","level":"info","event":"CREATE TABLE orderinfo_bq (","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.900834Z","level":"info","event":"    order_id integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.901196Z","level":"info","event":"    user_id integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.901540Z","level":"info","event":"    status text,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.901891Z","level":"info","event":"    gender character,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.902434Z","level":"info","event":"    created_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.902986Z","level":"info","event":"    returned_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.903810Z","level":"info","event":"    shipped_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.904701Z","level":"info","event":"    delivered_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.905114Z","level":"info","event":"    num_of_item integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.905357Z","level":"info","event":"    is_cancelled boolean,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:57.905678Z","level":"info","event":"    delivery_duration_days double precision);","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.391015Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.393770Z","level":"info","event":"DDL executed successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.404996Z","level":"info","event":"PostgreSQL connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.802804Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.803132Z","level":"info","event":"CSV data successfully loaded into table 'orderinfo_bq' using copy_from.","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.815101Z","level":"info","event":"PostgreSQL connection closed.","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.843112Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.843425Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.843582Z","level":"info","event":"Task operator:<Task(PythonOperator): load_to_postgres>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-27T07:04:58.829739","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}

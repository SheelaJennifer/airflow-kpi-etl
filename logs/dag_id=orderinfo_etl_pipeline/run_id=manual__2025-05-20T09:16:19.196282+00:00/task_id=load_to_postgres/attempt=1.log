{"timestamp":"2025-05-20T09:21:53.776623","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-20T09:21:53.778271","level":"info","event":"Filling up the DagBag from /home/sheela/airflow/dags/orderinfo_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-20T09:21:55.243584Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:55.244445Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:55.244857Z","level":"info","event":"Current task name:load_to_postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:55.245080Z","level":"info","event":"Dag name:orderinfo_etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.368919Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.369666Z","level":"info","event":"--- Generated DDL ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.370122Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.370509Z","level":"info","event":"CREATE TABLE orderinfo_bq (","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.370825Z","level":"info","event":"    order_id integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.371078Z","level":"info","event":"    user_id integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.371276Z","level":"info","event":"    status text,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.371478Z","level":"info","event":"    gender text,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.371684Z","level":"info","event":"    created_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.371878Z","level":"info","event":"    returned_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.372100Z","level":"info","event":"    shipped_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.372274Z","level":"info","event":"    delivered_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.372417Z","level":"info","event":"    num_of_item integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.372714Z","level":"info","event":"    is_cancelled boolean,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:57.372933Z","level":"info","event":"    delivery_duration_days double precision);","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:58.232271Z","level":"info","event":"Error executing DDL: relation \"orderinfo_bq\" already exists","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:58.232870Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:58.267292","level":"warning","event":"pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.","category":"UserWarning","filename":"/home/sheela/airflow/dags/load_data.py","lineno":69,"logger":"py.warnings"}
{"timestamp":"2025-05-20T09:21:58.289810Z","level":"info","event":"Error loading CSV to PostgreSQL: 'Engine' object has no attribute 'cursor'","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:58.291053","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-05-20T09:21:58.399756Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:58.400085Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-20T09:21:58.400493Z","level":"info","event":"Task operator:<Task(PythonOperator): load_to_postgres>","chan":"stdout","logger":"task"}

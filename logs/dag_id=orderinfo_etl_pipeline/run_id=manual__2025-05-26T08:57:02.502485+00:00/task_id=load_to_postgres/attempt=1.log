{"timestamp":"2025-05-26T08:57:31.157581","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-26T08:57:31.161295","level":"info","event":"Filling up the DagBag from /home/sheela/airflow/dags/orderinfo_etl_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-26T08:57:35.550881Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:35.554952Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:35.555410Z","level":"info","event":"Current task name:load_to_postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:35.555705Z","level":"info","event":"Dag name:orderinfo_etl_pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.188956Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.189701Z","level":"info","event":"--- Generated DDL ---","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.190139Z","level":"info","event":" CREATE TABLE orderinfo_bq_test (","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.190629Z","level":"info","event":"    order_id integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.191242Z","level":"info","event":"    user_id integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.191728Z","level":"info","event":"    status text,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.192212Z","level":"info","event":"    gender text,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.192645Z","level":"info","event":"    created_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.193138Z","level":"info","event":"    returned_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.193456Z","level":"info","event":"    shipped_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.193709Z","level":"info","event":"    delivered_at timestamp without time zone,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.193941Z","level":"info","event":"    num_of_item integer,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.194224Z","level":"info","event":"    is_cancelled boolean,","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.194685Z","level":"info","event":"    delivery_duration_days double precision","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.194909Z","level":"info","event":");","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.648949Z","level":"info","event":" Table created successfully.","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.674780","level":"warning","event":"pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.","category":"UserWarning","filename":"/home/sheela/airflow/dags/load_data.py","lineno":62,"logger":"py.warnings"}
{"timestamp":"2025-05-26T08:57:37.688133Z","level":"info","event":" Error loading CSV to PostgreSQL: 'Engine' object has no attribute 'cursor'","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.689334","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-05-26T08:57:37.737018Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.737269Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-26T08:57:37.737413Z","level":"info","event":"Task operator:<Task(PythonOperator): load_to_postgres>","chan":"stdout","logger":"task"}
